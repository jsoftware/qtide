name: JQtide

on:
 push:
  branches:
   - master
   - main

# trigger workflow on file change
#on:
# push:
#  paths:
#   - 'version.txt'

# if: ${{ false }}

jobs:

# linux ----------------------------------------------------------------
 jqtlinux:
  name: JQtide (Linux)
  runs-on: ubuntu-20.04
  steps:
   - name: Check Git repository
     uses: actions/checkout@v2
     with:
      submodules: recursive

   - name: Install Qt from distro
     run: script/installqt.sh linux

   - name: Compile JQtide
     run: script/makelinux.sh '5.12.8' linux

   - name: Release JQtide
     uses: ncipollo/release-action@v1
     with:
      tag: build
      artifacts: "jqt-linux.tar.gz,jqt-linux-slim.tar.gz"
      token: ${{ secrets.GITHUB_TOKEN }}
      allowUpdates: true
      replacesArtifacts: true

# macOS ----------------------------------------------------------------
 jqtmacos:
  name: JQtide (macOS)
  runs-on: macos-11
  steps:
   - name: Check Git repository
     uses: actions/checkout@v2
     with:
      submodules: recursive

   - name: Install Qt from source
     uses: jurplel/install-qt-action@v2
     with:
      version: 6.2.4
      target: 'desktop'
      dir: '${{github.workspace}}/qt/'
      modules: 'qtwebengine qt5compat qtwebsockets qtmultimedia qtwebchannel qtpositioning'
      aqtversion: '==2.1.0'

   - name: Compile JQtide
     env:
      CC: clang
     run: script/makemac.sh $(version)

   - name: Release JQtide
     uses: ncipollo/release-action@v1
     with:
      tag: build
      artifacts: "jqt-mac.zip,jqt-mac-slim.zip"
      token: ${{ secrets.GITHUB_TOKEN }}
      allowUpdates: true
      replacesArtifacts: true

# rpi64 ----------------------------------------------------------------
 jqtrpi64:
  name: JQtide (Raspberry)
  runs-on: ubuntu-20.04
  steps:
   - name: Check Git repository
     uses: actions/checkout@v2
     with:
      submodules: recursive

   - name: Install Qt, Compile JQtide
     uses: pguyot/arm-runner-action@v2
     with:
      cpu: cortex-a53
      cpu_info: cpuinfo/raspberrypi_zero2_w_arm64
      base_image: raspios_lite_arm64:latest
      image_additional_mb: 1024
      copy_artifact_path: output
      commands: |
       script/installqt.sh raspberry
       script/makelinux.sh '5.15.2' raspberry
       find output -type d -exec chmod a+rwx {} \;
       find output -type f -exec chmod a+rw {} \;

   - name: Transfer JQtide
     run: |
      ls output/*
      mv output/* .

   - name: Release JQtide
     uses: ncipollo/release-action@v1
     with:
      tag: build
      artifacts: "jqt-raspberry.tar.gz,jqt-raspberry-slim.tar.gz"
      token: ${{ secrets.GITHUB_TOKEN }}
      allowUpdates: true
      replacesArtifacts: true

# rpi32 ----------------------------------------------------------------
 jqtrpi32:
  name: JQtide (Raspberry32)
  if: ${{ false }}
  runs-on: ubuntu-20.04
  steps:
   - name: Check Git repository
     uses: actions/checkout@v2
     with:
      submodules: recursive

   - name: Install Qt, Compile JQtide
     uses: pguyot/arm-runner-action@v2
     with:
      cpu: arm1176
      cpu_info: cpuinfo/raspberrypi_zero2_w
      base_image: raspbian_lite:2020-02-13
      image_additional_mb: 1024
      copy_artifact_path: output
      commands: |
       script/installqt.sh raspberry32
       script/makelinux.sh '5.15.2' raspberry32
       find output -type d -exec chmod a+rwx {} \;
       find output -type f -exec chmod a+rw {} \;

   - name: Transfer JQtide
     run: |
      ls output/*
      mv output/* .

   - name: Release JQtide
     uses: ncipollo/release-action@v1
     with:
      tag: build
      artifacts: "jqt-raspberry32.tar.gz,jqt-raspberry32-slim.tar.gz"
      token: ${{ secrets.GITHUB_TOKEN }}
      allowUpdates: true
      replacesArtifacts: true

# freebsd --------------------------------------------------------------
 jqtfreebsd:
  name: JQtide (FreeBSD cross-platform-actions)
  runs-on: macos-12
  steps:
   - name: Checkout Git repository
     uses: actions/checkout@v2
     with:
      submodules: recursive

   - name: Install Qt, Compile JQtide
     uses: cross-platform-actions/action@v0.7.0
     with:
      operating_system: freebsd
      architecture: x86-64
      version: '13.0'
      shell: bash

      run: |
       rm -f jobdone
       export IGNORE_OSVERSION=yes
       sudo rdate time.cloudflare.com || true
       sudo pkg install -y curl zip gmake
       ldconfig -r
       script/installqt.sh freebsd || exit 1
       script/makelinux.sh '5.15.2' freebsd || exit 1
       touch jobdone

   - name: Check Status
     run: |
      test -f jobdone || exit 1

   - name: Release JQtide
     uses: ncipollo/release-action@v1
     with:
      tag: build
      artifacts: "jqt-freebsd.tar.gz,jqt-freebsd-slim.tar.gz"
      token: ${{ secrets.GITHUB_TOKEN }}
      allowUpdates: true
      replacesArtifacts: true

# windows --------------------------------------------------------------
 jqtwin:
  name: JQtide (Windows)
  runs-on: windows-2019
  steps:
   - name: Check Git repository
     uses: actions/checkout@v2
     with:
      submodules: recursive

   - name: Install Qt from source
     uses: jurplel/install-qt-action@v2
     with:
      version: 6.2.4
      target: 'desktop'
      dir: '${{github.workspace}}/qt/'
      modules: 'qtwebengine qt5compat qtwebsockets qtmultimedia qtwebchannel qtpositioning'
      aqtversion: '==2.1.0'

   - name: Compile JQtide
     shell: cmd
     run: script\makewin.cmd $(version)

   - name: Release JQtide
     uses: ncipollo/release-action@v1
     with:
      tag: build
      artifacts: "jqt-win.zip,jqt-win-slim.zip"
      token: ${{ secrets.GITHUB_TOKEN }}
      allowUpdates: true
      replacesArtifacts: true

 webhook:
  name: Run Webhook
  runs-on: ubuntu-20.04
  needs: [jqtlinux, jqtmacos, jqtrpi64, jqtwin, jqtfreebsd]
  steps:
   - name: update server
     uses: distributhor/workflow-webhook@v2
     env:
      webhook_url: ${{ secrets.WEBHOOK_URL }}
      webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
      data: '{ "id": "jqtbuild" }'
